%hr/
%label
  = t('views.layers.form.field.display_on_form_entry')
%p.smalltext= t('views.layers.form.field.show_this_field_and_value_on_form_entry')
= ko_check_box_tag :is_display_field, css: {error: :codeError}
%hr/
%label
  = t('views.layers.form.field.dependent_field')

<!-- ko with: impl() -->
%input#field-search.ux-search{"data-bind" => "value: autoCompleteValue,
  ko_autocomplete: { source: $root.autoCompleteFieldListForCalculation(), select: selectField}",
  minChar: 3, :type => "text", placeholder: 'Type field name'}

/ko if: dependent_fields().length > 0
.superblyTagfieldDiv{style: "border: 0 solid #dddddd; border-radius: 0; box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.3) inset;"}
  %ul.superblyTagItems
    /ko foreach: dependent_fields
    %li.superblyTagItem
      %span{ko(text: :code)}
      %a{ko(click: '$parent.removeDependentField')}x
    //ko
//ko
%br
.clear

%label
  = t('views.layers.form.field.dependent_field')
.superblyTagfieldDiv{style: "border: 0 solid #dddddd; border-radius: 0; box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.3) inset;"}
  %ul.superblyTagItems
    /ko foreach: dependent_fields
    %li.superblyTagItem
      %a{ko(text: :code, click: '$parent.addFieldToCodeCalculation')}
    //ko
%textarea{ko(value: '$parent.impl().codeCalculation', valueUpdate: :afterkeydown), rows: 4, style: "width:275px !important;"}
<!-- /ko -->
